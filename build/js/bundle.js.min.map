{"version":3,"sources":["app.js"],"names":["pagina","cita","nombre","fecha","hora","servicios","iniciarApp","mostrarServicios","mostrarSeccion","cambiarSeccion","paginaSiguiente","paginaAnterior","botonesPaginador","mostrarResumen","nombreCita","fechaCita","deshabilitarFechaAnterior","seccionAnterior","document","querySelector","classList","remove","add","tabAnterior","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","parseInt","target","dataset","paso","async","resultado","fetch","db","json","servicio","id","precio","nombreServicio","createElement","textContent","precioServicio","servicioDiv","idServicio","onclick","seleccionarServicio","appendChild","error","console","log","elemento","tagName","parentElement","contains","eliminarServicio","agregarServicio","firstElementChild","nextElementSibling","filter","servicioObj","resumenDiv","Object","values","includes","noServicios","nombreTexto","value","trim","length","mostrarAlerta","alerta","mensaje","tipo","setTimeout","fechaInput","dia","Date","getUTCDate","inputFecha","fechaAhora","fechaDeshabilitar","getFullYear","getMonth","getDate","min"],"mappings":"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","file":"bundle.js","sourcesContent":["let pagina = 1;\n\nconst cita = {\n    nombre: '',\n    fecha: '',\n    hora: '',\n    servicios: []\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    iniciarApp();\n});\n\nfunction iniciarApp() {\n    mostrarServicios();\n\n    // Resalta el div actual segun el tab al que se presiona\n    mostrarSeccion();\n\n    // Oculta o muestra una seccion segun el tab al que se presiona\n    cambiarSeccion();\n\n    // Paginacion siguiente y anterior\n    paginaSiguiente(); \n    paginaAnterior();\n\n    // Comprueba la pagina actual para ocultar o mostrar la paginacion\n    botonesPaginador();\n\n    // Muestra el resumen de la cita (o mensaje de error en caso de no pasar la validacion)\n    mostrarResumen();\n\n    // Almacena el nombre de la cita en el objeto\n    nombreCita();\n\n    // Almacena la fecha de la cita en el objeto\n    fechaCita();\n\n    // Deshabilita dias pasados\n    deshabilitarFechaAnterior();\n}\n\nfunction mostrarSeccion() {\n\n    // Eliminar mostrar-seccion de la seccion anterior\n    const seccionAnterior =  document.querySelector('.mostrar-seccion');\n    if(seccionAnterior) {\n        seccionAnterior.classList.remove('mostrar-seccion');\n    }\n\n    const seccionActual = document.querySelector(`#paso-${pagina}`);\n    seccionActual.classList.add('mostrar-seccion');\n    \n    //Eliminar la clase de actual en el tab anterior\n    const tabAnterior = document.querySelector('.tabs .actual');\n    if (tabAnterior) {\n        tabAnterior.classList.remove('actual');\n    }\n\n    // Resalta el Tab actual\n    const tab = document.querySelector(`[data-paso=\"${pagina}\"]`);\n    tab.classList.add('actual');\n}\n\nfunction cambiarSeccion() {\n    const enlaces = document.querySelectorAll('.tabs button');\n\n    enlaces.forEach( enlace => {\n        enlace.addEventListener('click', e => {\n            e.preventDefault();\n\n            pagina = parseInt(e.target.dataset.paso);\n\n            //Llamar la funcion de mostrar seccion\n            mostrarSeccion();\n            botonesPaginador();\n        })\n    })\n}\n\nasync function mostrarServicios() {\n    try {\n        const resultado = await fetch('./servicios.json');\n        const db = await resultado.json();\n\n        const {servicios} = db;\n        \n        // Generar el HTML\n        servicios.forEach( servicio => {\n            const {id, nombre, precio} = servicio;\n\n            //DOM Scripting\n            // Generar nombre de servicio\n            const nombreServicio = document.createElement('P');\n            nombreServicio.textContent = nombre;\n            nombreServicio.classList.add('nombre-servicio');\n\n            // Generar precio de servicio\n            const precioServicio = document.createElement('P');\n            precioServicio.textContent = `$ ${precio}`;\n            precioServicio.classList.add('precio-servicio');\n\n            // Generar div contenedor de servicio\n            const servicioDiv = document.createElement('DIV');\n            servicioDiv.classList.add('servicio')\n            servicioDiv.dataset.idServicio = id; //Guardar id de servicio\n\n            // Selecciona un servicio para la cita\n            servicioDiv.onclick = seleccionarServicio;\n\n\n            // Inyectar precio y nombre al div de servicio\n            servicioDiv.appendChild(nombreServicio);\n            servicioDiv.appendChild(precioServicio);\n            \n\n            //Inyectarlo en el HTML\n            document.querySelector('#servicios').appendChild(servicioDiv)\n\n        });\n\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nfunction seleccionarServicio(e) {\n\n    let elemento;\n    // forzar que el elemento al cual le damos clic sea el DIV\n    if(e.target.tagName == 'P') {\n        elemento = e.target.parentElement;\n        \n    } else {\n        elemento = e.target;\n        \n    }\n\n    if(elemento.classList.contains('seleccionado')) {\n        elemento.classList.remove('seleccionado')\n\n        const id = parseInt(elemento.dataset.idServicio);\n\n        eliminarServicio(id);\n    }else {\n        elemento.classList.add('seleccionado')\n\n        const servicioObj = {\n            id: parseInt(elemento.dataset.idServicio),\n            nombre: elemento.firstElementChild.textContent,\n            precio: elemento.firstElementChild.nextElementSibling.textContent\n        }\n\n        //console.log(servicioObj);\n\n        agregarServicio(servicioObj);\n    }\n\n}\n\nfunction eliminarServicio(id) {\n    const {servicios} = cita;\n    cita.servicios = servicios.filter(servicio => servicio.id !== id);\n    console.log(cita);\n}\n\nfunction agregarServicio(servicioObj) {\n    const {servicios} = cita;\n\n    cita.servicios = [...servicios, servicioObj];\n}\n\nfunction paginaSiguiente() {\n    const paginaSiguiente = document.querySelector('#siguiente');\n    paginaSiguiente.addEventListener('click', () => {\n        pagina++;\n\n        botonesPaginador();\n    })\n}\n\nfunction paginaAnterior() {\n    const paginaAnterior = document.querySelector('#anterior');\n    paginaAnterior.addEventListener('click', () => {\n        pagina--;\n\n        botonesPaginador();\n    })\n}\n\nfunction botonesPaginador() {\n    const paginaSiguiente = document.querySelector('#siguiente');\n    const paginaAnterior = document.querySelector('#anterior');\n\n    if (pagina === 1) {\n        paginaAnterior.classList.add('ocultar');\n    } else if (pagina === 3) {\n        paginaSiguiente.classList.add('ocultar');\n        paginaAnterior.classList.remove('ocultar');\n    } else {\n        paginaAnterior.classList.remove('ocultar');\n        paginaSiguiente.classList.remove('ocultar');\n    }\n\n    mostrarSeccion(); // Cambia la seccion que se muestra por las de la pagina\n}\n\nfunction mostrarResumen() {\n    \n    // Destructuring\n    const {nombre, fecha, hora, servicios} = cita;\n\n    // Seleccionar el resumen\n    const resumenDiv = document.querySelector('.contenido-resumen');\n\n    // Validacion de objeto\n    if(Object.values(cita).includes('')) {\n        const noServicios = document.createElement('P');\n        noServicios.textContent = 'Faltan datos de Servicios, hora, fecha o nombre';\n\n        noServicios.classList.add('invalidar-cita');\n\n        // Agregar a resumen Div\n        resumenDiv.appendChild(noServicios);\n    }\n\n}\n\nfunction nombreCita() {\n    const nombreInput = document.querySelector('#nombre');\n\n    nombreInput.addEventListener('input', e => {\n        const nombreTexto = e.target.value.trim();\n\n        // Validacion de que nombreTexto debe tener info\n        if(nombreTexto === '' || nombreTexto.length < 3) {\n            mostrarAlerta('Nombre no valido', 'error');\n        } else {\n            const alerta = document.querySelector('.alerta');\n            if(alerta){\n                alerta.remove();\n            }\n            cita.nombre = nombreTexto;\n        }\n\n    });\n}\n\nfunction mostrarAlerta(mensaje, tipo) {\n    \n    //Si hay una alerta previa no crear otra\n    const alertaPrevia = document.querySelector('.alerta');\n    if(alertaPrevia) {\n        return;\n    }\n\n    const alerta = document.createElement('DIV');\n    alerta.textContent = mensaje;\n    alerta.classList.add('alerta');\n\n    if(tipo === 'error') {\n        alerta.classList.add('error');\n    }\n\n    // Insertar en el HTML\n    const formulario = document.querySelector('.formulario');\n    formulario.appendChild(alerta);\n\n    // Eliminar la alerta despues de 3 segundos\n    setTimeout(() => {\n        alerta.remove();\n    }, 3000);\n}\n\nfunction fechaCita() {\n    const fechaInput = document.querySelector('#fecha');\n    fechaInput.addEventListener('input', e => {\n        const dia = new Date(e.target.value).getUTCDate();\n\n        if([0, 6].includes(dia)) {\n            e.preventDefault();\n            fechaInput.value = '';\n            mostrarAlerta('Fines de Semana no son permitidos', 'error');\n        } else {\n            cita.fecha = fechaInput.value;\n        }\n        \n    });\n}\nfunction deshabilitarFechaAnterior() {\n    const inputFecha = document.querySelector('#fecha');\n\n    const fechaAhora = new Date();\n    const year = fechaAhora.getFullYear();\n    const mes = fechaAhora.getMonth() + 1;\n    const dia = fechaAhora.getDate() + 1;\n\n    //Formato deseado: AAA-MM-DD\n    const fechaDeshabilitar = `${year}-${mes}-${dia}`;\n    inputFecha.min = fechaDeshabilitar;\n\n\n}"]}